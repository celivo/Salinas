import requests
from bs4 import BeautifulSoup
import re
import urllib.request
import csv
import pandas as pd

URL = "https://catalog.uidaho.edu/courses/"
page = requests.get(URL)
soup = BeautifulSoup(page.text, 'html.parser')
results = soup.findAll('a')

departments = [] #array of all department links
for link in results:
    #note: this actually filters and gets relevant links
    #but it may not be the best for generalizing-->
    #is there a standard structure for department links?
    p =  re.search(r'\/courses\/([^"]+)', str(link))
    #could possible do something with the first group?
    if p:
        departments.append("https://catalog.uidaho.edu" + p.group(0))
        
        
departments_of_interest = [departments[5], departments[4], departments[6], departments[7], departments[10]]

filename = "idaho" + ".csv"

csv_writer = csv.writer(open(filename, 'w'))
csv_writer.writerow(["Department Name","Number", "Title", "Description", "Graduate/Undergraduate", "lab", "year"])
keywords = ["agri", "agricultural", "food", "animal"] # variations or no?

for dep in departments_of_interest:
    
    URL = dep
    page = requests.get(URL)
    soup = BeautifulSoup(page.text, 'html.parser')
    
    #finding department name from page title block
    depname = soup.find(class_= "page-title").text
    #end department name


    courses = soup.findAll(class_="courseblock")
    
    
    for course in courses:
  
        #title and course number
        title = course.find(class_= "courseblocktitle").text
    
        count = 0
    
        #splitting title text by the third digit 
        for letter in title:
            if letter.isdigit():
                count +=1
            if count == 3:
                one = title.split(" ")
                number = one[0]
    
                title = title.split(number)[1] 
                count +=1
        #special case where notes are marked in parentheses
        for letter in title:
            if letter == ")":
                one = title.split(")")
                
                title = one[1]
        #title and course number ends
        
        
        #beginning course description  
        if course.find(class_= "courseblockdesc") != None:
            check = course.find(class_= "courseblockdesc")
        
        string = repr(check) #converting check to string
   
        #splitting by html tag
    
        if "</p>" in string:
            lst = string.split("</p>")
        if "<br>" in string:
            lst = string.split("<br>")
        if "<br/>" in string:
            lst = string.split("<br/>")
            
        desc = lst[1]
        #ending course description -- deletes courses without descriptions
        
        #beginning undergrad/grad
        for char in number:
            if char.isdigit():
                if int(char) >=5:
                    
                    
                    grad = "Graduate"
                else:
                    grad = "Undergraduate"
                break #checks only digit in the hundreds column        
        #ending undergrad/grad
        
        #lab--looking through word lab in course description
        lab = False
        if "lab" in desc:
            lab = True
        #ending lab section
        
        year = "2019-2020"
        
            
        for key in keywords: #<-- filtered
            if (key in title or key in desc):
                csv_writer.writerow([depname, number, title, desc, grad, lab, year])
                
data = pd.read_csv("idaho.csv") 
data
